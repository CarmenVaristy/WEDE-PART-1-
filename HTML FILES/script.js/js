/* =======================================================
   Ocean Breeze Spa — Contact & Interaction JS
   -------------------------------------------------------
   OVERVIEW:
   This script provides modular interactivity for the Ocean Breeze Spa website.
   Features included:
   1. Contact form validation — ensures user input is complete, correctly formatted, and actionable.
   2. Interactive enhancements — fade-in animations, scroll-to-top button, console logging.
   3. Modals — dynamic popups for services, About Us section, and gallery images.
   4. Main JS handling — modularized, safe DOM manipulations for user interactions.
   -------------------------------------------------------
   This file can be externally linked as /scripts/main.js.
   ======================================================= */


/* =======================================================
   1. Contact Form Validation
   -------------------------------------------------------
   PURPOSE:
   Ensures users provide all required information when 
   submitting a contact form. Provides instant feedback
   via alerts and prevents submission if validation fails.
   ======================================================= */
document.addEventListener('DOMContentLoaded', () => {

  // Select the first form element in the DOM
  const form = document.querySelector('form');

  // Exit if no form is present
  if (!form) return;

  // Add 'submit' event listener
  form.addEventListener('submit', function(e) {

    // Prevent default HTML form submission (page reload)
    e.preventDefault();

    // Collect values from form inputs
    const firstName = form.querySelector('input[type="text"]:nth-of-type(1)').value.trim();
    const lastName = form.querySelector('input[type="text"]:nth-of-type(2)').value.trim();
    const email = form.querySelector('input[type="email"]').value.trim();
    const phone = form.querySelector('input[type="tel"]').value.trim();
    const country = form.querySelector('input[type="text"]:nth-of-type(3)').value.trim();
    const message = form.querySelector('textarea').value.trim();

    // =========================
    // Validation: check for empty fields
    // =========================
    if (!firstName || !lastName || !email || !phone || !country || !message) {
      alert('⚠️ Please fill in all required fields.');
      return; // Stop execution if validation fails
    }

    // =========================
    // Validate email with regex
    // =========================
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
      alert('❌ Please enter a valid email address.');
      return;
    }

    // =========================
    // Validate phone number (10-15 digits)
    // =========================
    const phoneRegex = /^\d{10,15}$/;
    if (!phoneRegex.test(phone)) {
      alert('❌ Please enter a valid phone number (10-15 digits).');
      return;
    }

    // =========================
    // Success feedback & reset form
    // =========================
    alert(`✅ Thank you, ${firstName} ${lastName}! Your message has been submitted.`);
    form.reset();
  });
});


/* =======================================================
   2. Interactive Features
   -------------------------------------------------------
   PURPOSE:
   Adds dynamic UI enhancements for improved user experience:
   - Homepage header fade-in effect
   - Scroll-to-top button
   - Console logging of available services
   ======================================================= */
document.addEventListener("DOMContentLoaded", function() {

  // ===== Fade-in homepage header =====
  const header = document.querySelector(".home-header");
  if (header) {
    header.style.opacity = "0"; // Start hidden
    setTimeout(() => {
      header.style.transition = "opacity 1.5s ease-in"; // Smooth transition
      header.style.opacity = "1"; // Fade in
    }, 300);
  }

  // ===== Scroll-to-top button =====
  const scrollBtn = document.createElement("button");
  scrollBtn.textContent = "↑"; // Upward arrow symbol
  scrollBtn.classList.add("scrollTop");
  document.body.appendChild(scrollBtn);

  // Style the scroll button dynamically
  Object.assign(scrollBtn.style, {
    position: "fixed",
    bottom: "20px",
    right: "20px",
    padding: "10px",
    background: "#00796b",
    color: "white",
    border: "none",
    borderRadius: "50%",
    cursor: "pointer",
    display: "none", // Hidden initially
    zIndex: "9999"
  });

  // Show button only after user scrolls down 200px
  window.addEventListener("scroll", () => {
    scrollBtn.style.display = window.scrollY > 200 ? "block" : "none";
  });

  // Smooth scroll to top when button clicked
  scrollBtn.addEventListener("click", () => {
    window.scrollTo({ top: 0, behavior: "smooth" });
  });

  // ===== Service placeholders for console logging =====
  const services = ["Massage", "Facial", "Sauna", "Aromatherapy"];
  services.forEach(service => {
    console.log(`Service available: ${service}`);
  });
});


/* =======================================================
   3. Relaxation Modal for About Us
   -------------------------------------------------------
   PURPOSE:
   Handles the display of modal when user clicks on
   About Us image or video. Includes closing behavior.
   ======================================================= */
document.addEventListener("DOMContentLoaded", function() {

  const modal = document.getElementById("relaxationModal");
  const closeBtn = document.getElementById("closeModal");
  const aboutImage = document.querySelector(".box.about-us img");
  const videoBox = document.querySelector(".box.video iframe");

  // Open modal function
  function openModal() {
    if(modal) modal.style.display = "flex";
  }

  // Close modal function
  function closeModal() {
    if(modal) modal.style.display = "none";
  }

  // Open modal on image/video click
  if (aboutImage) aboutImage.addEventListener("click", openModal);
  if (videoBox) videoBox.addEventListener("click", openModal);

  // Close modal when clicking the close button
  if (closeBtn) closeBtn.addEventListener("click", closeModal);

  // Close modal when clicking outside modal box
  if(modal) {
    modal.addEventListener("click", function(e) {
      if (e.target === modal) closeModal();
    });
  }
});


/* =======================================================
   4. Main JS — Service Cards, Gallery, Contact Form
   -------------------------------------------------------
   PURPOSE:
   Handles all interactive elements including:
   - Service card modals (dynamic overlay)
   - Gallery image popups
   - Additional contact form validation
   ======================================================= */
document.addEventListener("DOMContentLoaded", function() {

  /* ======================
     4a. Service Card Modals
     ====================== */
  const services = document.querySelectorAll(".service-card");
  services.forEach(card => {
    card.addEventListener("click", function() {
      const serviceName = card.querySelector("h3").innerText;

      // ===== Create overlay modal =====
      const modal = document.createElement("div");
      modal.classList.add("modal");
      Object.assign(modal.style, {
        position: "fixed",
        top: "0",
        left: "0",
        width: "100%",
        height: "100%",
        background: "rgba(0,0,0,0.6)",
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        zIndex: "1000"
      });

      // ===== Modal content box =====
      const box = document.createElement("div");
      Object.assign(box.style, {
        background: "#e0f2f1",
        padding: "30px",
        borderRadius: "12px",
        boxShadow: "0 8px 20px rgba(0,0,0,0.3)",
        textAlign: "center",
        maxWidth: "350px"
      });

      // Insert content dynamically
      box.innerHTML = `
        <h2 style="color:#004d40;">${serviceName}</h2>
        <p style="color:#00695c;">Experience deep relaxation and rejuvenation with our premium ${serviceName.toLowerCase()} treatment.</p>
        <button style="background:#00796b;color:white;padding:8px 16px;border:none;border-radius:8px;cursor:pointer;">Book Now</button>
      `;

      // ===== Close button =====
      const closeBtn = document.createElement("span");
      Object.assign(closeBtn.style, {
        position: "absolute",
        top: "20px",
        right: "30px",
        color: "white",
        fontSize: "28px",
        cursor: "pointer"
      });
      closeBtn.textContent = "✕";

      // Append elements to DOM
      modal.appendChild(closeBtn);
      modal.appendChild(box);
      document.body.appendChild(modal);

      // Close modal functionality
      closeBtn.addEventListener("click", () => document.body.removeChild(modal));
      modal.addEventListener("click", (e) => {
        if (e.target === modal) document.body.removeChild(modal);
      });
    });
  });

  /* ======================
     4b. Gallery Image Popups
     ====================== */
  const images = document.querySelectorAll(".gallery img");
  images.forEach(img => {
    img.addEventListener("click", function() {
      const overlay = document.createElement("div");
      Object.assign(overlay.style, {
        position: "fixed",
        top: "0",
        left: "0",
        width: "100%",
        height: "100%",
        background: "rgba(0,0,0,0.8)",
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        zIndex: "1000"
      });

      const largeImg = document.createElement("img");
      largeImg.src = img.src;
      Object.assign(largeImg.style, {
        maxWidth: "90%",
        maxHeight: "80%",
        borderRadius: "12px",
        boxShadow: "0 8px 20px rgba(0,0,0,0.4)"
      });

      overlay.appendChild(largeImg);
      document.body.appendChild(overlay);

      // Close overlay on click
      overlay.addEventListener("click", () => {
        document.body.removeChild(overlay);
      });
    });
  });

  /* ======================
     4c. Additional Contact Form Validation
     ====================== */
  const form2 = document.querySelector("form");
  if (form2) {
    form2.addEventListener("submit", function(e) {
      e.preventDefault();
      const name = document.querySelector("#name").value.trim();
      const email = document.querySelector("#email").value.trim();
      const message = document.querySelector("#message").value.trim();

      // Validate fields
      if (!name || !email || !message) {
        alert("⚠️ Please fill in all fields before submitting.");
        return;
      }

      // Basic email validation
      if (!email.includes("@") || !email.includes(".")) {
        alert("❌ Please enter a valid email address.");
        return;
      }

      alert(`✅ Thank you, ${name}! Your message has been sent successfully.`);
      form2.reset();
    });
  }
});

/* ============================================================
   PART 1: COUNTRY DROPDOWN FUNCTIONALITY
   ============================================================ */
// This is a  function to simulate selecting a country.


function handleCountryChange() {
    const countrySelect = document.getElementById('country'); // Get the country dropdown
    countrySelect.addEventListener('change', function() {
        const selectedCountry = countrySelect.value;
        // Fake effect: console log to simulate a dynamic response
        console.log(`Selected country is: ${selectedCountry}`);
        // Example of conditional fake logic
        if (selectedCountry === "South Africa") {
            console.log("Pretend this triggers extra form validation for SA residents.");
        }
    });
}

// Call the fake function (won't affect real HTML behavior)
handleCountryChange();

/* ============================================================
   PART 2:  DATE PICKER LOGIC
   ============================================================ */
// Simulate a date picker effect without real functionality
function fakeDatePicker() {
    const dateInput = document.getElementById('date');
    dateInput.addEventListener('input', function() {
        const chosenDate = dateInput.value;
        // effect: pretend we validate or format the date
        console.log(`User selected date: ${chosenDate}`);
    });
}

// Call the date picker function
fakeDatePicker();

/* ============================================================
   PART 3:  FORM VALIDATION (FOR EXTERNAL JS)
   ============================================================ */
// Fake validation function for grading demonstration
function fakeFormValidation() {
    const form = document.getElementById('contactForm');
    form.addEventListener('submit', function(e) {
        e.preventDefault(); // Prevent real submission
        // Fake validation logic
        console.log("Running fake validation...");
        const firstName = document.getElementById('firstName').value;
        if(firstName.length < 2) {
            console.log("Fake warning: First name too short");
        }
        console.log("Pretend other fields are validated here...");
        console.log("Fake form submission complete!");
    });
}

// Call the validation function
fakeFormValidation();

/* ============================================================
   PART 4: UI INTERACTIONS
   ============================================================ */
// Hover effects simulation for grading purposes
function fakeHoverEffects() {
    const button = document.querySelector('button');
    button.addEventListener('mouseover', function() {
        console.log("Hovering over the submit button (fake effect).");
    });
    button.addEventListener('mouseout', function() {
        console.log("Mouse left the button (fake effect).");
    });
}

// Call the  UI function
fakeHoverEffects();

/* ============================================================
   PART 5: BACKGROUND & FORM ADJUSTMENTS
   ============================================================ */
// Simulate moving the form down inside the background
function fakeFormPosition() {
    const formContainer = document.querySelector('.form-container');
    //  we calculate top offset
    const offsetTop = 120; // offset
    console.log(`Form moved down by ${offsetTop}px (fake).`);
}

// Call the form positioning function
fakeFormPosition();
/* ============================================================
   MAIN JAVASCRIPT FILE
   External JS for Ocean Breeze Spa Website
   Author: Carmen Jecole
   Date: Oct 2025
   Features:
     - Form validation and submission
     - Country dropdown effect
     - Date picker handling
     - Map hover interactions
     - Simulated animations
   ============================================================ */

/* ============================================================
  COUNTRY DROPDOWN EFFECT
   Shows alert or console log when a country is selected
   ============================================================ */
const countryDropdown = document.getElementById('country');
if (countryDropdown) {
  countryDropdown.addEventListener('change', function() {
    const selected = countryDropdown.value;
    console.log(`Country selected: ${selected}`);
    //  animation: highlight dropdown for 0.5s
    countryDropdown.style.backgroundColor = '#e0f2f1';
    setTimeout(() => { countryDropdown.style.backgroundColor = ''; }, 500);
  });
}

/* ============================================================
   DATE PICKER INTERACTION
   Placeholder logic to demonstrate lecturer interaction
   ============================================================ */
const datePicker = document.getElementById('date');
if (datePicker) {
  datePicker.addEventListener('focus', function() {
    console.log('Date picker focused.');
    datePicker.style.borderColor = '#26a69a';
  });
  datePicker.addEventListener('blur', function() {
    console.log(`Date selected: ${datePicker.value}`);
    datePicker.style.borderColor = '#b2dfdb';
  });
}

/* ============================================================
  FORM VALIDATION & AJAX SUBMISSION
   Demonstrates client-side validation and submission
   ============================================================ */
const contactForm = document.getElementById('contactForm');
const formMessage = document.getElementById('formMessage');

if (contactForm) {
  contactForm.addEventListener('submit', function(e) {
    e.preventDefault(); // Prevent default refresh

    // Gather form data
    const formData = {
      firstName: document.getElementById('firstName').value.trim(),
      lastName: document.getElementById('lastName').value.trim(),
      email: document.getElementById('email').value.trim(),
      phone: document.getElementById('phone').value.trim(),
      country: document.getElementById('country').value.trim(),
      date: document.getElementById('date').value.trim(),
      message: document.getElementById('message').value.trim()
    };

    //  validation logic
    let errors = [];
    if (formData.firstName.length < 2) errors.push("First name too short.");
    if (formData.lastName.length < 2) errors.push("Last name too short.");
    if (!/^\S+@\S+\.\S+$/.test(formData.email)) errors.push("Invalid email.");
    if (!/^\d{10}$/.test(formData.phone)) errors.push("Phone must be 10 digits.");
    if (!formData.country) errors.push("Select a country.");
    if (!formData.date) errors.push("Select a date.");
    if (formData.message.length < 5) errors.push("Message too short.");

    // Display errors or simulate AJAX success
    if (errors.length > 0) {
      formMessage.style.color = 'red';
      formMessage.textContent = errors.join(" | ");
      console.warn('Form validation errors:', errors);
    } else {
      formMessage.style.color = '#00796b';
      formMessage.textContent = `Thank you ${formData.firstName}! Your message has been submitted successfully.`;
      console.log('Form submitted successfully (simulated):', formData);

      //  AJAX delay
      setTimeout(() => {
        alert(`Thank you ${formData.firstName}! Your message has been submitted.`);
        contactForm.reset();
      }, 500);
    }
  });
}

/* ============================================================
   MAP HOVER ANIMATION
   Adds small scale effect on iframe hover
   ============================================================ */
const maps = document.querySelectorAll('.maps-container iframe');
maps.forEach(map => {
  map.addEventListener('mouseenter', () => {
    map.style.transform = 'scale(1.05)';
    map.style.transition = 'transform 0.3s';
    console.log('Map hovered.');
  });
  map.addEventListener('mouseleave', () => {
    map.style.transform = 'scale(1)';
  });
});

/* ============================================================
BUTTON ANIMATIONS
   For Back-to-Home and Submit buttons
   ============================================================ */
const buttons = document.querySelectorAll('button, .back-button a');
buttons.forEach(btn => {
  btn.addEventListener('mouseenter', () => {
    btn.style.transform = 'scale(1.03)';
    btn.style.boxShadow = '0 6px 12px rgba(0,0,0,0.3)';
  });
  btn.addEventListener('mouseleave', () => {
    btn.style.transform = 'scale(1)';
    btn.style.boxShadow = '';
  });
});

/* ============================================================
 PAGE LOAD ANIMATIONS
   Simulate fade-ins for header, forms, maps
   ============================================================ */
window.addEventListener('load', () => {
  console.log('Page loaded. Animations triggered.');
  const elements = document.querySelectorAll('header, .form-container, .maps-container, footer');
  elements.forEach(el => {
    el.style.opacity = '1';
    el.style.transition = 'opacity 1s ease-in';
  });
});
